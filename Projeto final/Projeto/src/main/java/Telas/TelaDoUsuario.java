package Telas;

import javax.swing.JOptionPane;
import DAO.DAOUsuarios;
import DAO.DAOFiles;
import Back.Usuario;
import Back.Files;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.WindowConstants;
import java.awt.BorderLayout;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author Montilha
 */
public class TelaDoUsuario extends javax.swing.JFrame {
    
    DAOFiles dao = new DAOFiles();
    DAOUsuarios daou = new DAOUsuarios();
    List<String> listaConsulta = new ArrayList<>();
    String aux = "";
    Usuario use;
    Usuario usecomp = new Usuario();
    Files fil = new Files();
    File arquivo = null;
    
    /**
     * Creates new form TelaDoUsuario
     */
    public TelaDoUsuario(Usuario use) {
        this.use = use;
        initComponents();
        dao.CriaConexao();
        dao.ConsultarFiltradoNome(listaConsulta, Integer.toString(use.getIdUsuario()));
        ExibeConsulta();
    }
    
    private void ExibeConsulta(){
        for (String consulta : listaConsulta) {
            aux += consulta + "\n";
        }
        ta_arquivos.setText(aux);
        aux = "";
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt_upload = new javax.swing.JButton();
        lb_arquivo = new javax.swing.JLabel();
        tf_arquivos = new javax.swing.JTextField();
        bt_excluir = new javax.swing.JButton();
        bt_download = new javax.swing.JButton();
        lb_chave = new javax.swing.JLabel();
        tf_chave = new javax.swing.JTextField();
        lb_email = new javax.swing.JLabel();
        tf_email = new javax.swing.JTextField();
        bt_compartilhar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_arquivos = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        bt_upload.setText("Novo arquivo");
        bt_upload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_uploadMouseClicked(evt);
            }
        });

        lb_arquivo.setText("Arquivo:");

        bt_excluir.setText("Excluir");
        bt_excluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_excluirMouseClicked(evt);
            }
        });

        bt_download.setText("Fazer download");
        bt_download.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_downloadMouseClicked(evt);
            }
        });

        lb_chave.setText("Chave para criptografia e descriptografia:");

        lb_email.setText("Email com quem deseja compartilhar o arquivo:");

        bt_compartilhar.setText("Compartilhar arquivo");
        bt_compartilhar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_compartilharMouseClicked(evt);
            }
        });

        ta_arquivos.setColumns(20);
        ta_arquivos.setRows(5);
        jScrollPane1.setViewportView(ta_arquivos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bt_upload)
                        .addGap(18, 18, 18)
                        .addComponent(lb_arquivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_arquivos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_download))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb_email)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_email, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_compartilhar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb_chave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_chave)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_upload)
                    .addComponent(bt_download)
                    .addComponent(bt_excluir)
                    .addComponent(tf_arquivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_arquivo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_chave)
                    .addComponent(tf_chave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bt_compartilhar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lb_email)
                        .addComponent(tf_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bt_excluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_excluirMouseClicked
        fil.setNome(tf_arquivos.getText());
        dao.Excluir(fil);
        dao.ConsultarFiltradoNome(listaConsulta, Integer.toString(use.getIdUsuario()));
        ExibeConsulta();
    }//GEN-LAST:event_bt_excluirMouseClicked

    private void bt_uploadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_uploadMouseClicked
        if(!tf_chave.getText().isEmpty()){    
            arquivo = null;
            String pastainicial = System.getProperty("user.dir");
            JFileChooser chooser = new JFileChooser(pastainicial);
            if (chooser.showDialog(null, "Escolher arquivo") == JFileChooser.APPROVE_OPTION) {
                arquivo = chooser.getSelectedFile();
            }
            fil.setNome(arquivo.getName());
            arquivo = criptografar(arquivo, tf_chave.getText());
            fil.setDados(arquivo);
            fil.setIdUsuario(use.getIdUsuario());
            dao.Inserir(fil);
            dao.ConsultarFiltradoNome(listaConsulta, Integer.toString(use.getIdUsuario()));
            ExibeConsulta();
        } else{
            JOptionPane.showMessageDialog(this, "Insira uma chave de criptografia");
        }
    }//GEN-LAST:event_bt_uploadMouseClicked

    private void bt_downloadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_downloadMouseClicked
        fil.setNome(tf_arquivos.getText());
//        if(dao.download(fil.getNome(), tf_chave.getText())){
//            JOptionPane.showMessageDialog(this, "Download feito");
//        } else{
//            JOptionPane.showMessageDialog(this, "Chave ou nome do arquivo incorretos");
//        }
        dao.download(fil.getNome()); //Download sem descriptografar
        JOptionPane.showMessageDialog(this, "Download feito");
    }//GEN-LAST:event_bt_downloadMouseClicked

    private void bt_compartilharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_compartilharMouseClicked
        if(!tf_chave.getText().isEmpty()){
            arquivo = null;
            String pastainicial = System.getProperty("user.dir");
            JFileChooser chooser = new JFileChooser(pastainicial);
            if (chooser.showDialog(null, "Escolher arquivo") == JFileChooser.APPROVE_OPTION) {
                arquivo = chooser.getSelectedFile();
            }
            fil.setNome(arquivo.getName());
            arquivo = criptografar(arquivo, tf_chave.getText());
            fil.setDados(arquivo);
            usecomp.setEmail(tf_email.getText());
            usecomp.setIdUsuario(3);
            usecomp.setSenha("Arroba");
            daou.CriaConexao();
            int idUsuario = daou.ConsultarComp(listaConsulta, usecomp);
            daou.FechaConexao();
            fil.setIdUsuario(idUsuario);
            dao.Inserir(fil);
            JOptionPane.showMessageDialog(this, "Arquivo compartilhado");
        } else{
            JOptionPane.showMessageDialog(this, "Insira uma chave de criptografia");
        }
    }//GEN-LAST:event_bt_compartilharMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new TelaDoUsuario().setVisible(true);
            }
        });
    }
    
    //Criptografia
    private File criptografar(File arquivo, String chave){
        try{
           byte[] chaveAjustada = dao.ajustarTamanhoChave(chave, 32);

            SecretKeySpec chaveSecreta = new SecretKeySpec(chaveAjustada, "AES");
            Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
            cipher.init(Cipher.ENCRYPT_MODE, chaveSecreta);

            try (InputStream inputStream = new FileInputStream(arquivo);
                 ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {

                byte[] buffer = new byte[8192];
                int bytesRead;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    byte[] encryptedBytes = cipher.update(buffer, 0, bytesRead);
                    outputStream.write(encryptedBytes);
                }
                byte[] encryptedBytes = cipher.doFinal();
                outputStream.write(encryptedBytes);

                // Criar um novo arquivo temporário com os dados criptografados em memória
                byte[] encryptedData = outputStream.toByteArray();
                File arquivoCriptografado = File.createTempFile("arquivo", ".enc");
                FileOutputStream fileOutputStream = new FileOutputStream(arquivoCriptografado);
                fileOutputStream.write(encryptedData);
                fileOutputStream.close();

                return arquivoCriptografado;
            }
        }catch (Exception e){
            System.out.println("Erro ao criptografar o arquivo:" + e);
            JOptionPane.showMessageDialog(this, "Erro ao criptografar o arquivo");
            return null;
        }
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_compartilhar;
    private javax.swing.JButton bt_download;
    private javax.swing.JButton bt_excluir;
    private javax.swing.JButton bt_upload;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_arquivo;
    private javax.swing.JLabel lb_chave;
    private javax.swing.JLabel lb_email;
    private javax.swing.JTextArea ta_arquivos;
    private javax.swing.JTextField tf_arquivos;
    private javax.swing.JTextField tf_chave;
    private javax.swing.JTextField tf_email;
    // End of variables declaration//GEN-END:variables
}
